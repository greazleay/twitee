{"version":3,"sources":["context/use-auth.tsx","hooks/useProvideAuth.tsx","components/SignOut.tsx","components/NavBar.tsx","components/Footer.tsx","pages/Home.tsx","PrivateRoute.tsx","pages/Page1.tsx","pages/Page2.tsx","pages/SignUp.tsx","pages/SignIn.tsx","App.tsx","index.tsx"],"names":["AuthContext","createContext","undefined","ProvideAuth","children","auth","useState","authToken","setAuthToken","isError","setIsError","isLoading","setIsLoading","user","setUser","instance","axios","create","baseURL","headers","Authorization","timeout","withCredentials","login","a","email","password","post","res","status","Error","data","console","error","message","logout","get","refreshToken","register","name","getUser","interceptors","response","use","err","originalConfig","config","_retry","new_token","defaults","common","Promise","reject","useProvideAuth","Provider","value","useAuth","useContext","SignOut","to","onClick","NavBar","className","Footer","style","width","height","flex","textAlign","HomePage","PrivateRoute","rest","render","location","pathname","state","from","PageOne","PageTwo","useEffect","src","avatar","alt","SignUp","useForm","handleSubmit","errors","formState","getValues","onSubmit","log","placeholder","required","minLength","htmlFor","type","validate","matchesPreviousPassword","confirmPassword","SignIn","useLocation","App","exact","path","Home","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a1033071.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\nimport { useProvideAuth } from '../hooks/useProvideAuth';\nimport { RouteProps } from 'react-router';\nimport { AuthProviderInterface } from '../type';\n\nconst AuthContext = createContext<AuthProviderInterface>(undefined!);\n\nexport const ProvideAuth = ({ children }: RouteProps) => {\n    const auth = useProvideAuth();\n    return (\n        <AuthContext.Provider value={auth}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n\n","import { useState } from 'react';\nimport axios from 'axios';\n\ninterface User {\n    email: string,\n    password: string,\n    name: string\n}\n\nexport const useProvideAuth = () => {\n    const [authToken, setAuthToken] = useState<string>('');\n    const [isError, setIsError] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [user, setUser] = useState({});\n\n    const API_URL = 'https://auth-svr.herokuapp.com/api/';\n\n    const instance = axios.create({\n        baseURL: API_URL,\n        headers: { Authorization: `Bearer ${authToken}` },\n        timeout: 15000,\n        withCredentials: true,\n    });\n\n    const login = async ({ email, password }: User): Promise<true | null> => {\n        try {\n            setIsLoading(true)\n            const res = await instance.post('auth/login', { email, password });\n            if (res.status !== 200) throw new Error('An error has occured');\n            setAuthToken(res.data.authToken);\n            setIsLoading(false);\n            return true;\n        } catch (err: any) {\n            console.error(err.message);\n            setIsError(err.message);\n            return null;\n        }\n    };\n\n    const logout = async (): Promise<true | null> => {\n        try {\n            await instance.get('auth/logout');\n            setAuthToken('');\n            return true;\n        } catch (err: any) {\n            console.error(err.message)\n            setIsError(err.message);\n            return null;\n        }\n    };\n\n    const refreshToken = async () : Promise<string | null> => {\n        try {\n            setIsLoading(true);\n            const res = await instance.post('auth/token_renewal');\n            if (res.status !== 200) throw new Error('An error has occured');\n            setAuthToken(res.data.authToken);\n            setIsLoading(false);\n            return res.data.authToken;\n        } catch (err: any) {\n            console.error(err.message);\n            setIsError(err.message);\n            return null;\n        }\n    }\n\n    const register = async ({ email, password, name }: User) : Promise<true | null> => {\n        try {\n            const res = await instance.post('auth/register', { email, password, name });\n            if (res.status !== 200) throw new Error('An error has occured');\n            setUser(res.data.user);\n            return true;\n        } catch (err: any) {\n            console.error(err.message);\n            setIsError(err.message);\n            return null;\n        }\n    };\n\n    const getUser = async () : Promise<true | null> => {\n        try {\n            setIsLoading(true)\n            const res = await instance.get('user/userinfo');\n            if (res.status !== 200) throw new Error('An error has occured');\n            setUser(res.data);\n            setIsLoading(false);\n            return true;\n        } catch (err: any) {\n            console.error(err.message);\n            setIsError(err.message);\n            return null;\n        }\n    };\n\n    instance.interceptors.response.use(\n        (res) => {\n            return res;\n        },\n        async (err) => {\n            const originalConfig = err.config;\n\n            if (err.response) {\n                // Access Token has expired\n                if (err.response.status === 401 && !originalConfig._retry) {\n                    originalConfig._retry = true;\n\n                    try {\n                        const new_token = await refreshToken();\n                        originalConfig.headers.Authorization = `Bearer ${new_token}`;\n                        instance.defaults.headers.common.Authorization = `Bearer ${new_token}`;\n                        return instance(originalConfig);\n                    } catch (_error: any) {\n                        if (_error.response && _error.response.data) {\n                            return Promise.reject(_error.response.data);\n                        }\n                        return Promise.reject(_error);\n                    }\n                }\n\n                if (err.response.status === 403 && err.response.data) {\n                    return Promise.reject(err.response.data);\n                }\n            }\n\n            return Promise.reject(err);\n        }\n    );\n\n    return { authToken, user, isError, isLoading, login, logout, register, getUser, refreshToken };\n}","import React from 'react';\nimport { useAuth } from '../context/use-auth';\nimport { Link } from 'react-router-dom';\n\nconst SignOut = () => {\n    const { logout } = useAuth();\n    const handleSignOut = () => {\n        logout();\n    }\n    return (\n        <>\n            <Link to=\"/page-one\">\n                <button>Page 1</button>\n            </Link>\n            <Link to=\"/page-two\">\n                <button>Page 2</button>\n            </Link>\n            <button onClick={handleSignOut}>Sign Out</button>\n        </>\n    );\n}\n\nexport default SignOut;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '../context/use-auth';\nimport SignOut from './SignOut';\n\nexport const NavBar = () => {\n    const { authToken } = useAuth();\n\n    return (\n        <nav className=\"nav\">\n            <Link to=\"/members-only\">\n                <button>Home</button>\n            </Link>\n            <Link to=\"/signin\">\n                <button>Sign In</button>\n            </Link>\n            <Link to=\"/signup\">\n                <button>Sign Up</button>\n            </Link>\n            {authToken && <SignOut />}\n\n        </nav>\n    )\n}","import React from \"react\";\nimport CSS from 'csstype';\n\nconst Footer = () => {\n    const style: CSS.Properties = {\n        width: '100%',\n        height: '100%',\n        flex: '1 1 0',\n        textAlign: 'center'\n    }\n    return (\n        <footer style={style}>\n            <p>© 2021 Pollaroid All rights reserved</p>\n        </footer>\n    )\n}\n\nexport default Footer","import { Link } from 'react-router-dom';\n\nconst HomePage = () => {\n  return (\n    <main className=\"main\">\n      <p>\n        Home Page\n      </p>\n      <Link to=\"/page-one\" className=\"App-link\">\n        Protected Page 1\n      </Link>\n      <Link to=\"/page-two\" className=\"App-link\">\n        Protected Page 2\n      </Link>\n    </main>\n  );\n}\n\nexport default HomePage\n","import React from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport { useAuth } from './context/use-auth';\n\nexport const PrivateRoute = ({ children, ...rest }: RouteProps) => {\n    const { authToken } = useAuth();\n\n    return (\n        <Route {...rest} render={({ location }) =>\n            authToken ? children : <Redirect to={{\n                pathname: 'signin',\n                state: { from: location }\n            }} />\n        } />\n    )\n}\n\n","import { Link } from \"react-router-dom\";\n\nconst PageOne = () => {\n\n    return (\n        <main className=\"main\">\n            <p>Page 1</p>\n            <Link to=\"/page-two\">\n                <button>Next Page</button>\n            </Link>\n        </main>\n    );\n};\n\nexport default PageOne;\n","import { Link } from 'react-router-dom';\nimport { useAuth } from '../context/use-auth';\nimport { useEffect } from 'react';\n\nconst PageTwo = () => {\n\n  const { getUser, isLoading, refreshToken, user } = useAuth()\n\n  useEffect(() => {\n    (async () => await getUser())();\n  }, []);\n\n  return (\n    <main className=\"main\">\n      <p>Page 2</p>\n      <Link to=\"/page-one\">\n        <button>Previous Page</button>\n      </Link>\n      <button onClick={refreshToken}>Get New Token</button>\n      {isLoading ? <h2>LOADING...</h2> : <div>\n        <p>{user?.name}</p>\n        <p>{user?.email}</p>\n        <img src={user?.avatar} alt='' />\n      </div>}\n    </main>\n  );\n}\n\nexport default PageTwo\n","import React, { } from 'react';\nimport { useForm } from 'react-hook-form';\n// import { useHistory } from 'react-router';\n// import { Convert } from 'mongo-image-converter'\n\nconst SignUp = () => {\n    const { register, handleSubmit, formState: { errors }, getValues } = useForm();\n    // const [submitted, setSubmitted] = useState(false);\n    // let history = useHistory();\n\n    const onSubmit = async (data: any) => {\n        // const imageString = await Convert(data.img[0]);\n        // const parsedData = { ...data, img: imageString };\n        // try {\n        //     axios.post('https://inv-hub.herokuapp.com/api/products/create', parsedData)\n        // } catch (err) {\n        //     if (err) return console.log(`${err.name}: ${err.message}`);\n        // }\n        // setSubmitted(true);\n        // setTimeout(() => { history.replace('/products') }, 2000);\n        console.log(data, \"Filled\");\n    }\n\n    return (\n        <main className=\"main\">\n            <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n                <h1 className=\"form-title\">Sign up</h1>\n                <fieldset className=\"fieldset\">\n                    <input className=\"input\" placeholder=\"Full Name\" {...register(\"name\", { required: \"NAME REQUIRED\", minLength: 1 })} />\n                    <label className=\"label\" htmlFor=\"name\">Name</label>\n                    {errors.name && <p>{errors.name.message}</p>}\n                </fieldset>\n                <fieldset className=\"fieldset\">\n                    <input type=\"email\" className=\"input\" placeholder=\"Emaiil Address\" {...register(\"email\", { required: \"PLEASE ENTER A VALID EMAIL\" })} />\n                    <label className=\"label\" htmlFor=\"email\">Email</label>\n                    {errors.email && <p>{errors.email.message}</p>}\n                </fieldset>\n                <fieldset className=\"fieldset\">\n                    <input className=\"input\" type=\"password\" placeholder=\"Enter your Password\" {...register(\"password\", { required: \"YOU MUST SPECIFY A PASSWORD\", minLength: { value: 6, message: \"Password must be at least 6 characters\" } })} />\n                    <label className=\"label\" htmlFor=\"password\">Password</label>\n                    {errors.password && <p>{errors.password.message}</p>}\n                </fieldset>\n                <fieldset className=\"fieldset\">\n                    <input className=\"input\" type=\"password\" placeholder=\"Confirm password\" {...register(\"confirmPassword\", {\n                        required: \"PLEASE CONFIRM YOUR PASSWORD\",\n                        validate: {\n                            matchesPreviousPassword: (value) => {\n                                const { password } = getValues();\n                                return password === value || \"PASSWORDS MUST MATCH!\";\n                            }\n                        }\n                    })} />\n                    <label className=\"label\" htmlFor=\"password\">Confirm Password</label>\n                    {errors.confirmPassword && <p>{errors.confirmPassword.message}</p>}\n                </fieldset>\n                <button className=\"submitBtn\" type=\"submit\">Create</button>\n            </form>\n        </main>\n    )\n}\n\nexport default SignUp","import '../assets/css/style.css';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useAuth } from '../context/use-auth';\nimport { useLocation, Redirect } from 'react-router-dom';\n\nconst SignIn = () => {\n    const { register, handleSubmit, formState: { errors } } = useForm();\n    const { authToken, isLoading, login } = useAuth();\n    const location = useLocation();\n    const referer: string = 'members-only'\n\n    const onSubmit = async (data: any) => {\n        // const imageString = await Convert(data.img[0]);\n        // const parsedData = { ...data, img: imageString };\n        // try {\n        //     axios.post('https://inv-hub.herokuapp.com/api/products/create', parsedData)\n        // } catch (err) {\n        //     if (err) return console.log(`${err.name}: ${err.message}`);\n        // }\n        // setSubmitted(true);\n        // setTimeout(() => { history.replace('/products') }, 2000);\n        // setIsAuthenticated(true)\n        await login(data)\n    }\n\n    if (authToken) {\n        return <Redirect to={referer} />;\n    }\n\n    return (\n        <main className=\"main\">\n            <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n                <h1 className=\"form-title\">Sign In</h1>\n                <fieldset className=\"fieldset\">\n                    <input type=\"email\" className=\"input\" placeholder=\"Emaiil Address\" {...register(\"email\", { required: \"PLEASE ENTER A VALID EMAIL\" })} />\n                    <label className=\"label\" htmlFor=\"email\">Email</label>\n                    {errors.email && <p>{errors.email.message}</p>}\n                </fieldset>\n                <fieldset className=\"fieldset\">\n                    <input className=\"input\" type=\"password\" placeholder=\"Enter your Password\" {...register(\"password\", { required: \"YOU MUST SPECIFY A PASSWORD\", minLength: { value: 6, message: \"Password must be at least 6 characters\" } })} />\n                    <label className=\"label\" htmlFor=\"password\">Password</label>\n                    {errors.password && <p>{errors.password.message}</p>}\n                </fieldset>\n                <button className=\"submitBtn\" type=\"submit\">{isLoading ? 'Please wait..' : 'Sign In'}</button>\n            </form>\n        </main>\n    )\n}\n\nexport default SignIn;","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { NavBar } from './components/NavBar';\nimport Footer from './components/Footer';\nimport HomePage from './pages/Home';\nimport { PrivateRoute } from './PrivateRoute';\nimport PageOne from './pages/Page1';\nimport PageTwo from './pages/Page2';\nimport SignUp from './pages/SignUp';\nimport SignIn from './pages/SignIn';\nimport { ProvideAuth } from './context/use-auth';\n\nconst App = () => {\n\n  return (\n    \n      <BrowserRouter>\n      <ProvideAuth>\n        <div className=\"container\">\n          <NavBar />\n          <Switch>\n            <Route exact path=\"/signin\"><SignIn /></Route>\n            <Route exact path=\"/signup\"><SignUp /></Route>\n            <Route exact path=\"/members-only\"><HomePage /></Route>\n            <PrivateRoute>\n              <Route exact path=\"/page-one\"><PageOne /></Route>\n              <Route exact path=\"/page-two\"><PageTwo /></Route>\n            </PrivateRoute>\n            <Redirect to=\"/login\" />\n          </Switch>\n          <Footer />\n        </div>\n        </ProvideAuth>\n      </BrowserRouter>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}